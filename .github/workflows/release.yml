name: Build and Publish Stringer NuGet Package with Tests

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install essential tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore Stringer.Nuget/Stringer.Nuget.sln

      - name: Build the solution
        run: dotnet build Stringer.Nuget/Stringer.Nuget.sln --configuration Release --no-restore

      - name: Run NUnit Tests
        run: dotnet test Stringer.Nuget.Tests/Stringer.Nuget.Tests/Stringer.Nuget.Tests.csproj --no-build --configuration Release --logger "trx;LogFileName=TestResults/test-results.trx"

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: nunit-test-results
          path: Stringer.Nuget.Tests/Stringer.Nuget.Tests/TestResults/test-results.trx

      - name: Ensure nupkg directory exists
        run: mkdir -p ./nupkg

      - name: Pack the project
        run: |
          dotnet pack Stringer.Nuget/Stringer.Nuget.csproj --configuration Release --output ./nupkg
          find . -name "*.nupkg"

      - name: Debug package output
        run: find . -name "*.nupkg" || echo "No packages found"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v1.0.${{ github.run_number }}"
          release_name: "Release v1.0.${{ github.run_number }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.NUGET_KEY }}

      - name: Publish package to GitHub Packages
        run: dotnet nuget push ./nupkg/*.nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate

      - name: Upload NuGet package artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: ./nupkg/*.nupkg
